/*
 * JavAPT
 * Copyright (C) 2012 IndiPlex
 * 
 * JavAPT is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * MainFrame.java
 *
 * Created on 07.01.2012, 14:31:10
 */
package de.indiplex.javapt.gui;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintStream;
import java.sql.SQLException;
import java.util.ArrayList;
import de.indiplex.javapt.DEB;
import de.indiplex.javapt.JavAPT;
import javax.swing.JOptionPane;

/**
 *
 * @author IndiPlex <Cartan12@indiplex.de>
 */
public class MainFrame extends javax.swing.JFrame {

    public JavAPT apt;
    private String currentPackageSelected = null;
    private String currentSourceSelected = null;
    private String currentDownloadSelected = null;
    private ArrayListModel pkgModel;
    private ArrayListModel srcModel;
    private ArrayListModel dwnModel;
    private int tabState = 0;
    public boolean taskPerforming = false;

    /** Creates new form MainFrame
     * @param apt 
     */
    public MainFrame(JavAPT apt) {
        this.apt = apt;
        initComponents();

        btnDownload.setMaximumSize(btnDownload.getMaximumSize());
        btnDownWithDeps.setMaximumSize(btnDownWithDeps.getMaximumSize());

        btnDownload.setMinimumSize(btnDownload.getMinimumSize());
        btnDownWithDeps.setMinimumSize(btnDownWithDeps.getMinimumSize());

        System.setOut(new PrintStream(new ConsoleOutputStream(textAreaConsole)));
    }

    public void init() {
        fillPackages(apt.debs);
        fillSources(apt.sourcesURLs);
        fillDownloads(apt.dDownloads);
        if (!checkState()) {
            return;
        }
        try {
            new Thread(new UpdateThread(apt, this, true)).start();
        } catch (Exception ex) {
            ex.printStackTrace();
            System.out.println("Error!");
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listSources = new javax.swing.JList();
        progressBar = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        listPackages = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        listDownloads = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        btnUpdateAll = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnDownload = new javax.swing.JButton();
        btnDownWithDeps = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        textAreaConsole = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listSources.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listSources.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listSourcesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listSources);

        progressBar.setStringPainted(true);

        jLabel1.setText("Sources");

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        listPackages.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listPackages.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listPackagesValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(listPackages);

        jTabbedPane1.addTab("Packages", jScrollPane2);

        listDownloads.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listDownloads.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listDownloadsValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(listDownloads);

        jTabbedPane1.addTab("Downloads", jScrollPane3);

        btnUpdateAll.setText("Update Sources");
        btnUpdateAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAllActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnUpdate.setText("Reload DB");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemove, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                    .addComponent(btnUpdateAll, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateAll)
                    .addComponent(btnUpdate)))
        );

        btnDownload.setText("Download");
        btnDownload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownloadActionPerformed(evt);
            }
        });

        btnDownWithDeps.setText("Down. w. Depends.");
        btnDownWithDeps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownWithDepsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(btnDownload, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDownWithDeps))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDownload)
                    .addComponent(btnDownWithDeps)))
        );

        textAreaConsole.setBackground(new java.awt.Color(0, 0, 0));
        textAreaConsole.setColumns(20);
        textAreaConsole.setEditable(false);
        textAreaConsole.setFont(new java.awt.Font("Monospaced", 0, 10));
        textAreaConsole.setForeground(new java.awt.Color(255, 255, 255));
        textAreaConsole.setRows(5);
        textAreaConsole.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane4.setViewportView(textAreaConsole);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel2.setText("Search:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 1014, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField1)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listPackagesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listPackagesValueChanged
        currentPackageSelected = pkgModel.getElementAt(listPackages.getSelectedIndex());
    }//GEN-LAST:event_listPackagesValueChanged

    private void btnDownWithDepsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownWithDepsActionPerformed
        if (!checkState()) {
            return;
        }
        switch (tabState) {
            case 0:
                if (currentPackageSelected == null || currentPackageSelected.equals("")) {
                    System.out.println("Please select a package!");
                } else {
                    try {
                        new Thread(new DownloadThread(apt, this, currentPackageSelected, true)).start();
                    } catch (Exception ex) {
                        System.out.println("Error!");
                    }
                }
                break;
            case 1:
                if (currentDownloadSelected == null || currentDownloadSelected.equals("")) {
                    System.out.println("Please select a package!");
                } else {
                    SSHInstalDialog sshDialog = new SSHInstalDialog(this, true, currentDownloadSelected, true);
                    sshDialog.setVisible(true);
                }
                taskPerforming = false;
                break;
        }
    }//GEN-LAST:event_btnDownWithDepsActionPerformed

    private void btnDownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownloadActionPerformed
        if (!checkState()) {
            return;
        }
        switch (tabState) {
            case 0:
                if (currentPackageSelected == null || currentPackageSelected.equals("")) {
                    System.out.println("Please select a package!");
                } else {
                    try {
                        new Thread(new DownloadThread(apt, this, currentPackageSelected, false)).start();
                    } catch (Exception ex) {
                        ex.printStackTrace();
                        System.out.println("Error!");
                    }
                }
                break;
            case 1:
                if (currentDownloadSelected == null || currentDownloadSelected.equals("")) {
                    System.out.println("Please select a package!");
                } else {
                    SSHInstalDialog sshDialog = new SSHInstalDialog(this, true, currentDownloadSelected, false);
                    sshDialog.setVisible(true);
                }
                taskPerforming = false;
                break;
        }
    }//GEN-LAST:event_btnDownloadActionPerformed

    private void btnUpdateAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAllActionPerformed
        if (!checkState()) {
            return;
        }
        try {
            new Thread(new UpdateThread(apt, this, false)).start();
        } catch (Exception ex) {
            ex.printStackTrace();
            System.out.println("Error!");
        }
    }//GEN-LAST:event_btnUpdateAllActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (!checkState()) {
            return;
        }
        try {
            new Thread(new UpdateThread(apt, this, true)).start();
        } catch (Exception ex) {
            ex.printStackTrace();
            System.out.println("Error!");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void listSourcesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listSourcesValueChanged
        int i = listSources.getSelectedIndex();
        if (i < srcModel.getSize()) {
            currentSourceSelected = srcModel.getElementAt(i);
        }
    }//GEN-LAST:event_listSourcesValueChanged

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            apt.addSource(JOptionPane.showInputDialog(this, "Enter URL:"));
        } catch (IOException ex) {
            ex.printStackTrace();
            System.out.println("Error!");
        }
        taskPerforming = false;
    }//GEN-LAST:event_btnAddActionPerformed

    private void listDownloadsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listDownloadsValueChanged
        currentDownloadSelected = dwnModel.getElementAt(listDownloads.getSelectedIndex());
    }//GEN-LAST:event_listDownloadsValueChanged

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        tabState = jTabbedPane1.getSelectedIndex();
        switch (tabState) {
            case 0:
                btnDownload.setText("Download");
                btnDownWithDeps.setText("Down. w. Depends.");
                break;
            case 1:
                btnDownload.setText("SSH-Install");
                btnDownWithDeps.setText("Inst. w. Depends.");
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        try {
            ArrayList<String> search = apt.search(evt.getActionCommand());
            if (search.isEmpty()) {
                System.out.println("Nothing found!");
            }
            fillPackagesWithStringList(search);
        } catch (SQLException ex) {
            ex.printStackTrace();
            System.out.println("SQL-Error!");
        }
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        try {
            apt.removeSource(currentSourceSelected);
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
            System.out.println("Error!");
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    public void clearLog() {
        textAreaConsole.setText("");
    }

    public void setPBMax(long max) {
        progressBar.setMaximum((int) max);
    }

    private boolean checkState() {
        if (taskPerforming) {
            System.out.println("Please wait until the current task has finished!");
            return false;
        } else {
            taskPerforming = true;
            return true;
        }
    }

    public void resetPB() {
        progressBar.setMaximum(100);
        progressBar.setValue(0);
    }

    public void setProgressBar(long percent) {
        progressBar.setValue((int) percent);
    }

    public void fillPackages(ArrayList<DEB> packages) {
        ArrayList<String> s = new ArrayList<String>();
        for (DEB deb : packages) {
            s.add(deb.packagename);
        }
        fillPackagesWithStringList(s);
    }

    public void fillPackagesWithStringList(ArrayList<String> packages) {
        ArrayListModel lm = new ArrayListModel();
        lm.setData(packages);
        pkgModel = lm;
        listPackages.setModel(lm);
    }

    public void fillDownloads(File downloadDir) {
        ArrayListModel lm = new ArrayListModel();
        lm.setData(downloadDir.list());
        dwnModel = lm;
        listDownloads.setModel(lm);
    }

    public void fillSources(ArrayList<String> sources) {
        ArrayListModel lm = new ArrayListModel();
        lm.setData(sources);
        srcModel = lm;
        listSources.setModel(lm);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDownWithDeps;
    private javax.swing.JButton btnDownload;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdateAll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JList listDownloads;
    private javax.swing.JList listPackages;
    private javax.swing.JList listSources;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JTextArea textAreaConsole;
    // End of variables declaration//GEN-END:variables
}
